<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>