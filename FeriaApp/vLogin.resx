<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DI08gFgTGrHw/45fW15oVjr2TEjAY8OaWd5i+WC/MtOUQ+HYM5/QEI8qiKGRy/Y4XwuF5nm6pVYSmtv8
        Clc8yrnb11XCYPHQ+JWZ5mdUMGBzR1tmKOtYKM2sbPcCbWjGmm26kpvQCu/RXPh+GmENnhheV9/hFhq/
        MtMsXMGtAa6d43AjhiYr29k+Md0AWWguNBtqJbc7C0v6vOrDNIu++YPdqqJfmWnKoYLQdHXFi9LE0MjT
        k6QbIOtN6mu2ySpCU3xMWXiOALHr0LBm6jvcQuNXZppyqOB2Z/0MPihLGpaZFu3sXDgfGu1l9+WFpvDs
        pcrZaMRzj1v9mqnvcAqNZ5lpVqLSiTWY4qwKUmguxKLNh0Z7MWR5ofG5IrPwvGfGPmdd3cytifljPctM
        Uw7FoSmewknb1YayxmJtvhC37yRXh7QXQ5YXGu2VCMMMtAvPsGkc6J+9bHmH08e6lJmmHIqvvRRPFnhc
        uAHgQbqpWeowe5Grm6s90gjpeKxbYzFLC4/XlL5uT79m6jvWe6TRPXHENIVtBU9VqI3wdLT/W7Be0vQZ
        E3GL5UOjnZu/6gnQbzXfJgVhrPmwxZ8aIA13udWumfoGp9B4lplmHYp7xNLXtZOizxjHOzTPzejBmh94
        KIUmzclBUHCk0c25bT7y+4Qm/WTTEEphsI/u+TSl+1Qn+oqVvaq+wfdI41Jmmt9RfHKffoiQjV3TWigx
        fRM0y8tZZkb76z1eSqHZFitBWhHTxpGu2W9q1Uh8QpNuVNNTMHV7zcWfhCZ97kC7ZuobfEPjUmbZXwpD
        c5Evn3HfsKzuoVlzO/V7Sq1VOIqst+dc2nrbYqVJ9/RpaLqaajXpO9RXryehvTN/2Zxmr1nBMzflkZXn
        ujVT3+Db5exSZtlfCkMzzq2u5UG1Y30JdZr2xICdODTPg3VKinJemzuXkT9n/7CGJqna0q28xmOmV2ik
        ySpzm1memDz/dOcF6oCw6x6kVVZ43Lq6vG9oXMos+0NhaIQmaVyq4i2iSjmIN/Vke+nZj2vWaLQvcWhG
        a22fKeUueJQvf6Hkoyf4d6SbRYzHzBKPRBfvd1QeYTlW1+KNyzoUe5H7eUHwTXhNXd53RIBLmWV/KAzN
        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
</value>
  </data>
</root>